---
# This playbook deploys a kubernetes cluster
# with the default addons.

- name: setup python for coreos
  hosts: coreos
  gather_facts: False # would fail since Python isn't installed

  tasks:
    # Check if the python has already been downloaded, skip this whole play
    - block:
        - name: check for installed python2 (in opt/bin)
          raw: "[ -f /opt/bin/python2 ] && echo 'installed' || echo 'missing'"
          register: py2_check

        - meta: end_play
          when: py2_check.stdout_lines[0] == "installed"

    - name: check for downloaded ActivePython package
      raw: "[ -f {{ap_python2_package_file_name}} ] && echo 'present' || echo 'missing'"
      register: package_check

    - name: download ActivePython
      raw: wget {{ap_python2_package_download_url}}
      when: package_check.stdout_lines[0] == "missing"

    - name: check for unzipped ActivePython package folder
      raw: "[ -d {{ap_python2_package_name}} ] && echo 'present' || echo 'missing'"
      register: package_folder_check

    - name: unzip ActivePython
      raw: tar -xvf {{ap_python2_package_file_name}}
      when: package_folder_check.stdout_lines[0] == "missing"

    - name: create the resulting directory for ActivePython
      become: true
      raw: 'mkdir -p /opt/bin/active_python'

    - name: install ActivePython
      become: true
      raw: 'cd {{ap_python2_package_name}} && ./install.sh -I /opt/bin/active_python'

    # Setup links
    - name: link easy_install
      become: true
      raw: ln -sf /opt/bin/active_python/bin/easy_install /opt/bin/easy_install
    - name: link pip
      become: true
      raw: ln -sf /opt/bin/active_python/bin/pip /opt/bin/pip
    - name: link python
      become: true
      raw: ln -sf /opt/bin/active_python/bin/python /opt/bin/python
    - name: link python2
      become: true
      raw: ln -sf /opt/bin/active_python/bin/python /opt/bin/python2
    - name: link virtualenv
      become: true
      raw: ln -sf /opt/bin/active_python/bin/virtualenv /opt/bin/virtualenv

- hosts: all
  gather_facts: false
  become: yes
  roles:
    - pre-ansible
  tags:
    - pre-ansible

# Install etcd
- include: deploy-etcd.yml

# Install docker
- include: deploy-docker.yml

# install flannel
- hosts:
    - masters
    - nodes
  become: yes
  roles:
    - { role: etcd-certs, when: flannel_etcd_use_certs|default(false) }
    - { role: flannel, when: networking == 'flannel' }
  tags:
    - network-service-install

# install opencontrail
- hosts: all
  become: yes
  roles:
    - { role: opencontrail, when: networking == 'opencontrail'}
  tags:
    - network-service-install

# install contiv netmaster
- hosts: masters
  become: yes
  roles:
    - { role: contiv, contiv_role: netmaster, when: networking == 'contiv' }

# install kube master services
- include: deploy-master.yml

# launch addons, like dns
- include: deploy-addons.yml

# install kubernetes on the nodes
- include: deploy-node.yml

# provision opencontrail once the services are operational
- hosts:
    - masters[0]
    - nodes
  become: yes
  roles:
    - { role: opencontrail-provision, when: networking == 'opencontrail' }
  tags:
    - network-service-config

# install contiv netplugin
- hosts: nodes
  become: yes
  roles:
    - { role: contiv, contiv_role: netplugin, when: networking == 'contiv' }
